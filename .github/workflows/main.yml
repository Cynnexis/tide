name: Tide CI/CD

on:
  pull_request:
    branches:
      - master
      - 'cicd/**'
  push:
    branches:
      - master
      - 'cicd/**'

env:
  YQ_VERSION: v4.11.2

jobs:
  lint:
    runs-on: ubuntu-20.04
    name: Analyze code and generate the documentation
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - uses: actions/setup-java@v1
        with:
          java-version: '12.x'
      - uses: subosito/flutter-action@v1
        with:
          flutter-version: "2.4.0-4.2.pre"
          channel: 'beta'
      - name: Install dependencies
        run: flutter pub get
      - name: Analyze code
        run: flutter analyze --congratulate --no-pub --preamble --fatal-infos --fatal-warnings
      - name: Check dart code format
        run: flutter format --output=none --set-exit-if-changed .

  pages:
    runs-on: ubuntu-20.04
    name: Generate GitHub Pages
    needs: [lint]
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - uses: actions/setup-java@v1
        with:
          java-version: '12.x'
      - uses: subosito/flutter-action@v1
        with:
          flutter-version: "2.4.0-4.2.pre"
          channel: 'beta'
      - name: Install dependencies
        run: flutter pub get
      - name: Generate documentation
        run: |
          flutter pub global activate dartdoc
          dartdoc --exclude dart:async,dart:collection,dart:convert,dart:core,dart:developer,dart:io,dart:isolate,dart:math,dart:typed_data,dart,dart:ffi,dart:html,dart:js,dart:ui,dart:js_util
      - name: Deploy GitHub Pages
        uses: JamesIves/github-pages-deploy-action@4.1.4
        with:
          branch: gh-pages
          folder: doc/api

  build:
    runs-on: ubuntu-20.04
    name: Build Android Binaries
    needs: [lint]
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - uses: actions/setup-java@v1
        with:
          java-version: '12.x'
      - uses: subosito/flutter-action@v1
        with:
          flutter-version: "2.4.0-4.2.pre"
          channel: 'beta'
      - name: Install dependencies
        run: flutter pub get
      - name: Write keystore
        env:
          KEYSTORE_BASE64: ${{ secrets.KEYSTORE_BASE64 }}
          KEYSTORE_PASSWORD: ${{ secrets.KEYSTORE_PASSWORD }}
          KEYSTORE_KEY_ALIAS: ${{ secrets.KEYSTORE_KEY_ALIAS }}
          KEYSTORE_KEY_PASSWORD: ${{ secrets.KEYSTORE_KEY_PASSWORD }}
        run: |
          printf "%s" "$KEYSTORE_BASE64" | base64 --decode --ignore-garbage - > android/keystore.jks
          printf "storePassword=%s\nkeyPassword=%s\nkeyAlias=%s\nstoreFile=%s/android/keystore.jks" "$KEYSTORE_PASSWORD" "$KEYSTORE_KEY_PASSWORD" "$KEYSTORE_KEY_ALIAS" "$(pwd)" > android/key.properties
      - name: Build binaries
        run: |
          flutter build appbundle
          flutter build apk --split-per-abi
          rm -rf bin/
          mkdir bin/
          mv build/app/outputs/bundle/release/app*.aab build/app/outputs/flutter-apk/app*.apk bin/
      - name: Remove sensible files
        run: rm -f android/keystore.jks android/key.properties
      - name: Upload appbundle
        uses: actions/upload-artifact@v2
        with:
          name: Appbundle
          path: bin/app-release.aab
          if-no-files-found: error
          retention-days: 30
      - name: Upload APK (generic)
        uses: actions/upload-artifact@v2
        with:
          name: APK (generic)
          path: bin/app.apk
          if-no-files-found: error
          retention-days: 30
      - name: Upload APK (arm64)
        uses: actions/upload-artifact@v2
        with:
          name: APK (arm64)
          path: bin/app-arm64-v8a-release.apk
          if-no-files-found: error
          retention-days: 30
      - name: Upload APK (armeabi)
        uses: actions/upload-artifact@v2
        with:
          name: APK (armeabi)
          path: bin/app-armeabi-v7a-release.apk
          if-no-files-found: error
          retention-days: 30
      - name: Upload APK (x86_64)
        uses: actions/upload-artifact@v2
        with:
          name: APK (x86_64)
          path: bin/app-x86_64-release.apk
          if-no-files-found: error
          retention-days: 30

  release:
    runs-on: ubuntu-20.04
    name: Create a release
    needs: [lint, pages, build]
    if: github.event_name == 'push' && contains(github.ref, 'master') || contains(github.ref, 'cicd/')
    steps:
      - name: Download action artifacts
        id: download_artifacts
        uses: actions/download-artifact@v2.0.10
        with:
          path: bin
      - name: Treat downloaded artifacts
        run: |
          # Move all artifacts to current dirtectory
          cd bin
          find . -type f -exec mv -v {} . \;

          # Remove all sub-directories
          find . -empty -type d -delete
          cd ..
      - name: Checkout
        uses: actions/checkout@v2
      - name: Get current app version
        id: get_current_app_version
        run: |
          # Install yq
          foundArch="$(uname -p)"
          # List of possible values found here: https://stackoverflow.com/a/45125525/7347145
          case "$foundArch" in
            arm|armhf) ARCH='arm' ;;
            arm64|aarch64|aarch64_be|armv8b|armv8l) ARCH='arm64' ;;
            mips) ARCH='mips' ;;
            mips64) ARCH='mips64' ;;
            ppc64|ppcle|ppc64le) ARCH='ppc64' ;;
            s390|s390x) ARCH='s390x' ;;
            x86_64) ARCH='amd64' ;;
            i386|i686|x86) ARCH='386' ;;
            *) echo "error: unsupported architecture: $foundArch" >&2; exit 1 ;;
          esac
          curl -fsSL https://github.com/mikefarah/yq/releases/download/${YQ_VERSION}/yq_linux_${ARCH}.tar.gz | tar xz
          sudo mv yq_linux_${ARCH} /usr/bin/yq
          sudo chown root: /usr/bin/yq
          sudo chmod +x /usr/bin/yq

          # Get version name
          tide_version=$(yq eval '.version' pubspec.yaml)
          echo "tide_version=$tide_version" >> $GITHUB_ENV
      - name: Create a release for Tide
        id: create_release
        uses: actions/create-release@v1.1.4
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ env.tide_version }}
          release_name: v${{ env.tide_version }}
          body: "Ref: ${{ github.ref }} SHA: ${{ github.sha }}"
          draft: true
          prerelease: false
      - name: Upload appbundle
        uses: actions/upload-release-asset@v1.0.2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: bin/app-release.aab
          asset_name: app-release.aab
          asset_content_type: application/octet-stream
      - name: Upload APK (generic)
        uses: actions/upload-release-asset@v1.0.2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: bin/app.apk
          asset_name: app.apk
          asset_content_type: application/octet-stream
      - name: Upload APK (arm64)
        uses: actions/upload-release-asset@v1.0.2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: bin/app-arm64-v8a-release.apk
          asset_name: app-arm64-v8a-release.apk
          asset_content_type: application/octet-stream
      - name: Upload APK (armeabi)
        uses: actions/upload-release-asset@v1.0.2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: bin/app-armeabi-v7a-release.apk
          asset_name: app-armeabi-v7a-release.apk
          asset_content_type: application/octet-stream
      - name: Upload APK (x86_64)
        uses: actions/upload-release-asset@v1.0.2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: bin/app-x86_64-release.apk
          asset_name: app-x86_64-release.apk
          asset_content_type: application/octet-stream
