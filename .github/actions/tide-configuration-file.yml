# Reusable workflow that add the configuration file tide.yaml in the working
# directory.
#
# See https://docs.github.com/en/actions/using-workflows/reusing-workflows for
# more details on reusable workflows.
#
on:
  workflow_call:
    # Input arguments for this reusable workflow
    input:
      # The output file.
      output_file:
        required: false
        type: string
        default: tide.yaml

      # The scheme for the webapp URL.
      scheme:
        required: false
        type: string
        default: https

      # The host for the webapp URL, with subdomains if any.
      host:
        required: false
        type: string
        default: cynnexis.github.io

      # The port number for the webapp URL.
      port:
        required: false
        type: number
        default: 443

      # The path for the webapp URL. It must begins and ends with a slash.
      path:
        required: false
        type: string
        default: /tide/

      # The email address of the maintainer of the project. If not given, it
      # will default to the email address of the author of the first commit of
      # the project using this workflow.
      maintainer_email:
        required: false
        type: string
        default: ""

# All jobs to run when this workflow is called
jobs:
  # Add the tide.yaml file
  add_tide_yaml:
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Create ${{ inputs.output_file }}
        env:
          output_file: ${{ inputs.output_file }}
          scheme: ${{ inputs.scheme }}
          host: ${{ inputs.host }}
          port: ${{ inputs.port }}
          path: ${{ inputs.path }}
          maintainer_email: ${{ inputs.maintainer_email }}
        run: |
          # Get author email address from initial commit
          if [[ ! -v maintainer_email || -z $maintainer_email ]]; then
            if [[ -d .git ]]; then
              echo "Cannot get the maintainer email from a project without a '.git/' folder.:\n$(pwd)\n$(ls -lha .)" 1>&2
              exit 1
            fi
            maintainer_email=$(git show -s --format='%ae' "$(git rev-list --max-parents=0 HEAD)")
          fi

          cat > "$output_file" <<EOF
          webapp:
            uri:
              scheme: "$scheme"
              host: "$host"
              port: $port
              path: "$path"

          maintainer_email: "maintainer_email"
          EOF

